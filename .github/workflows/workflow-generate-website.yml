name: Generate Website
on:
  workflow_call:
    inputs:
      saxon_version:
        description: 'the version of Saxon to use'
        required: false
        default: '10.6'
        type: string
      hugo_version:
        description: 'the version of Hugo to use'
        required: false
        default: '0.83.1'
        type: string
      calabash_version:
        description: 'the version of XML Calabash to use'
        required: false
        default: '1.2.5-100'
        type: string
      commit_resources:
        description: 'commit the resources after generating them. Requires the access_token to be passed'
        required: false
        default: false
        type: boolean
      bad_links_fail_build:
        description: 'a boolean flag that determines if bad links found by the link checker fail fast and stop a complete build'
        required: false
        default: true
        type: boolean
    secrets:
      access_token:
        description: 'the access token to use for commits'
        required: false
  workflow_dispatch:
    branches:
    - main
    - develop
    - "release-*"
    inputs:
      saxon_version:
        description: 'the version of Saxon to use'
        required: true
        default: '10.6'
        type: string
      hugo_version:
        description: 'the version of Hugo to use'
        required: false
        default: '0.83.1'
        type: string
      calabash_version:
        description: 'the version of XML Calabash to use'
        required: false
        default: '1.2.5-100'
        type: string
      commit_resources:
        description: 'commit the resources after generating them. Requires a PAT defined as secrets.COMMIT_TOKEN'
        required: true
        default: false
        type: boolean
      bad_links_fail_build:
        description: 'a boolean flag that determines if bad links found by the link checker fail fast and stop a complete build'
        required: false
        default: true
        type: boolean
jobs:
  build-and-push-website:
    name: Build and Push Website
    runs-on: ubuntu-latest
    env:
      SAXON_VERSION: ${{ github.event.inputs.saxon_version }}${{ inputs.saxon_version }}
      CALABASH_HOME: dependencies/calabash
      CALABASH_VERSION: ${{ github.event.inputs.calabash_version }}${{ inputs.calabash_version }}
      HUGO_VERSION: ${{ github.event.inputs.hugo_version }}${{ inputs.hugo_version }}
      CICD_PATH: ./build/ci-cd
    steps:
    # use this for builds triggered from the UI on protected branches
    - name: Checkout Latest (using COMMIT_TOKEN)
      if: github.event_name == 'workflow_dispatch' && github.event.inputs.commit_resources == 'true'
      uses: actions/checkout@v3
      with:
        token: ${{ secrets.COMMIT_TOKEN }}
        submodules: recursive
      id: checkout_latest_workflow
    # use this for builds triggered from other workflows on protected branches
    - name: Checkout Latest (using access_token)
      if: github.event_name == 'push' && inputs.commit_resources == true
      uses: actions/checkout@v3
      with:
        token: ${{ secrets.access_token }}
        submodules: recursive
      id: checkout_latest_push
    # use this for overything else (i.e., pull requests) where publication is not needed
    - name: Checkout Latest
      if: steps.checkout_latest_workflow.conclusion == 'skipped' && steps.checkout_latest_push.conclusion == 'skipped'
      uses: actions/checkout@v3
      with:
        submodules: recursive
    # Setup runtime environment
    # -------------------------
    # Java JDK 11
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: 11
        distribution: 'temurin'
        cache: 'maven'
    - name: Get Saxon-HE
      run: |
        mvn org.apache.maven.plugins:maven-dependency-plugin:2.10:get -DartifactId=Saxon-HE -DgroupId=net.sf.saxon -Dversion=${SAXON_VERSION}
    # Install Calabash
    - name: Install Calabash
      run: |
        wget https://github.com/ndw/xmlcalabash1/releases/download/${CALABASH_VERSION}/xmlcalabash-${CALABASH_VERSION}.zip
        mkdir -p "${CALABASH_HOME}"
        unzip -d "${CALABASH_HOME}" "xmlcalabash-${CALABASH_VERSION}.zip" && f=("${CALABASH_HOME}"/*) && mv "${CALABASH_HOME}"/*/* "${CALABASH_HOME}" && rmdir "${f[@]}"
    # Install Hugo
    - name: Install Hugo
      run: |
        wget https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_Linux-64bit.deb
        sudo apt-get install ./hugo_extended_${HUGO_VERSION}_Linux-64bit.deb
    # Build Artifacts
    # ---------------
    - name: Generate specification documentation
      run: |
        bash "${CICD_PATH}/generate-specification-documentation.sh"
    - uses: actions/upload-artifact@v3
      with:
        name: specification-docs
        path: |
          docs/content/concepts/processing/profile-resolution.html
        retention-days: 5
    - name: Run Hugo
      run: |
          hugo --config "config.yaml,development-config.yaml" -v --debug --minify
      working-directory: ${{ github.workspace }}/docs
    - name: Zip Artifacts for Upload
      run: |
        zip ${{ runner.temp }}/metaschema-website.zip -r public/
      working-directory: ${{ github.workspace }}/docs
    - uses: actions/upload-artifact@v3
      with:
        name: website
        path: |
          ${{ runner.temp }}/metaschema-website.zip
        retention-days: 5
    - name: Link Checker
      id: linkchecker
      uses: lycheeverse/lychee-action@f1da3291e1d03cbe11a413ae9f16b62fec99e6b6 # v1.4.1
      with:
        args: --exclude-file ./build/config/.lycheeignore --verbose --no-progress './docs/public/**/*.html' --accept 200,206,429
        format: json
        output: html_link_report.json
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - uses: actions/upload-artifact@v3 # current: 6673cd052c4cd6fcf4b4e6e60ea986c889389535
      with:
        name: html_link_report
        path: html_link_report.json
        retention-days: 5
    - uses: actions/github-script@v3 # current: f05a81df23035049204b043b50c3322045ce7eb3
      if: steps.linkchecker.outputs.exit_code != 0
      with:
        script: |
          core.setFailed('Link checker detected broken or invalid links, read attached report.')
    - uses: actions/github-script@v3 # current: f05a81df23035049204b043b50c3322045ce7eb3
      if: steps.linkchecker.outputs.exit_code != 0 && (github.event.inputs.bad_links_fail_build == 'true' || inputs.bad_links_fail_build == true)
      with:
        script: |
          core.setFailed('Link checker detected broken or invalid links, read attached report.')
    - name: Deploy Website (using access_token)
      uses: peaceiris/actions-gh-pages@068dc23d9710f1ba62e86896f84735d869951305 # current: v3
      if: github.event_name == 'push' && inputs.commit_resources == true && github.ref_name == 'main'
      with:
        github_token: ${{ secrets.access_token }}
        enable_jekyll: false
        publish_dir: ./docs/public
        publish_branch: nist-pages
        commit_message: Deploying website [ci deploy skip]
    - name: Deploy Website (using COMMIT_TOKEN)
      uses: peaceiris/actions-gh-pages@068dc23d9710f1ba62e86896f84735d869951305 # current: v3
      if: github.event_name == 'workflow_dispatch' && github.event.inputs.commit_resources == 'true' && github.ref_name == 'main'
      with:
        github_token: ${{ secrets.COMMIT_TOKEN }}
        enable_jekyll: false
        publish_dir: ./docs/public
        publish_branch: nist-pages
        commit_message: Deploying website [ci deploy skip]
