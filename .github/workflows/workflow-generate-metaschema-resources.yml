name: Generate Model Resources
on:
  workflow_call:
    inputs:
      commit_resources:
        description: 'commit the resources after generating them. Requires the access_token to be passed'
        required: false
        default: false
        type: boolean
    secrets:
      access_token:
        description: 'the access token to use for commits'
        required: false
  workflow_dispatch:
    branches:
    - main
    - develop
    - "release-*"
    inputs:
      commit_resources:
        description: 'commit the resources after generating them. Requires a PAT defined as secrets.COMMIT_TOKEN'
        required: true
        default: false
        type: boolean
jobs:
  metaschema-artifacts:
    name: Generate Metaschema-Based Model Resources
    runs-on: ubuntu-20.04
    env:
      CHECKOUT_PATH: git/content
      CICD_PATH: build/ci-cd # relative to the CHECKOUT_PATH
      JAVA_CLASSPATH: ${{ github.workspace}}/lib
      NODE_ENV: production
    steps:
    # use this for builds triggered from the UI on protected branches
    - name: Checkout Latest (using COMMIT_TOKEN)
      if: github.event_name == 'workflow_dispatch' && github.event.inputs.commit_resources == 'true'
      uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b
      with:
        path: ${{ env.CHECKOUT_PATH }}
        token: ${{ secrets.COMMIT_TOKEN }}
        submodules: recursive
      id: checkout_latest_workflow
    # use this for builds triggered from other workflows on protected branches
    - name: Checkout Latest (using access_token)
      if: github.event_name == 'push' && inputs.commit_resources == true
      uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b
      with:
        path: ${{ env.CHECKOUT_PATH }}
        token: ${{ secrets.access_token }}
        submodules: recursive
      id: checkout_latest_push
    # use this for overything else (i.e., pull requests) where publication is not needed
    - name: Checkout Latest
      if: steps.checkout_latest_workflow.conclusion == 'skipped' && steps.checkout_latest_push.conclusion == 'skipped'
      uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b
      with:
        path: ${{ env.CHECKOUT_PATH }}
        submodules: recursive
    - name: Set env
      run: |
        echo "SAXON_HOME=${JAVA_CLASSPATH}" >> $GITHUB_ENV
        echo "CALABASH_HOME=${JAVA_CLASSPATH}" >> $GITHUB_ENV
    # Setup runtime environment
    # -------------------------
    # Java JDK 11
    - name: Set up JDK
      uses: actions/setup-java@2c7a4878f5d120bd643426d54ae1209b29cc01a3
      with:
        java-version: 11
        distribution: 'temurin'
        cache: 'maven'
    - name: Install JDK Deps Saxon and XML Calabash
      run: |
        cd "${CHECKOUT_PATH}/build"
        mkdir -p "${JAVA_CLASSPATH}"
        mvn dependency:copy-dependencies -DoutputDirectory="${JAVA_CLASSPATH}"
    - name: Set up NodeJS
      uses: actions/setup-node@969bd2663942d722d85b6a8626225850c2f7be4b
      with:
        node-version-file: '${{ env.CHECKOUT_PATH }}/build/.nvmrc'
        cache: 'npm'
        cache-dependency-path: '**/package-lock.json'
    - name: Setup Dependencies
      run: |
        # NodeJS
        cd "${CHECKOUT_PATH}/build"
        npm install --loglevel verbose
        echo "$PWD/node_modules/.bin/" >> $GITHUB_PATH
        # Operating System packages
        sudo rm -rf /var/lib/apt/lists/* && sudo apt-get update
        sudo apt-get install libxml2-utils
    # Build Artifacts
    # ---------------
    # job-validate-metaschema
    - name: Validate Metaschemas
      run: |
        bash "${CICD_PATH}/validate-metaschema.sh" -w "${GITHUB_WORKSPACE}/${CHECKOUT_PATH}" --scratch-dir "${RUNNER_TEMP}"
      working-directory: ${{ env.CHECKOUT_PATH }}
    # job-generate-schema
    - name: Generate Schemas
      run: |
        bash "${CICD_PATH}/generate-schema.sh" -w "${GITHUB_WORKSPACE}/${CHECKOUT_PATH}"
      working-directory: ${{ env.CHECKOUT_PATH }}
      continue-on-error: true
    # job-generate-converters
    - name: Generate Content Converters
      run: |
        bash "${CICD_PATH}/generate-content-converters.sh" -w "${GITHUB_WORKSPACE}/${CHECKOUT_PATH}"
      working-directory: ${{ env.CHECKOUT_PATH }}
      continue-on-error: true
    # job-run-unittests
    - name: Run Content Unit Tests
      run: |
        bash "${CICD_PATH}/run-unittests.sh" -w "${CHECKOUT_PATH}"
      working-directory: ${{ env.CHECKOUT_PATH }}
    - name: Zip Artifacts for Upload
      run: |
        zip ${{ runner.temp }}/metaschema-artifacts.zip -r xml/schema/*.xsd json/schema/*.json xml/convert/*.xsl json/convert/*.xsl
      working-directory: ${{ env.CHECKOUT_PATH }}
    - uses: actions/upload-artifact@3cea5372237819ed00197afe530f5a7ea3e805c8
      with:
        name: schemas-and-converters
        path: |
          ${{ runner.temp }}/metaschema-artifacts.zip
        retention-days: 5
    # Store Built Artifacts
    # ---------------
    - name: Publish Schemas and Converters
      # only do this on master
      if: github.event.inputs.commit_resources == 'true' || inputs.commit_resources == true
      uses: stefanzweifel/git-auto-commit-action@49620cd3ed21ee620a48530e81dba0d139c9cb80
      with:
        repository: ${{ env.CHECKOUT_PATH }}
        file_pattern: xml json
        skip_dirty_check: false
        commit_message: Publishing generated metaschema resources [ci skip]
